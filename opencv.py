# -*- coding: utf-8 -*-
"""opencv.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11RrtulMeYL7DqdQKqSmPB3EVbFdOYyDD

#Reading of images and showing of images
"""

import cv2

img = cv2.imread(r'E:\from phone\7.jpg') # read image
cv2.imshow('image' , img) # show image only in colab else cv2.imshow("title of window" , img that was read)
cv2.waitKey(10)
cv2.destroyAllWindows() # close all windows
# cv2.destroyWindow('title of  window) # close only one window

img.shape # (height, width, channels) now we can convert it to tensor for dl with pytorch

"""#Stacking of images
(horizontally and vertically)
"""

import numpy as np

img = cv2.imread(r'E:\from phone\7.jpg')
img2 = cv2.imread(r'E:\from phone\7.jpg')

# resize image
img = cv2.resize(img , (500,400)) # --> src: MatLike, dsize: Size | None
img2 = cv2.resize(img2 , (500,400))

# show multiple images on one window
h = np.hstack([img , img2]) # stack the image array horizontaly
v = np.vstack([img , img2]) # stack the image array vertically

v2 = np.vstack([h ,h])
print(h.shape)


# show image
cv2.imshow('stacked images' , v2)
cv2.waitKey(0)


"""#Slide show of image"""

# slide show of images
import os

list_name = os.listdir('E://from phone//') # list all files in a directory
print(list_name)

for name in list_name:
  img = cv2.imread(f'E://from phone//{name}') # pass 0 as another parameter for gray image
  img = cv2.resize(img , (500,400)) # resize as (width , height)
  cv2.imshow('something' , img)
  cv2.waitKey(0)

"""# Remember
--> open cv takes color argument as BGR
"""

# text over a image
img_get = cv2.imread('E://from phone//7.jpg')

# img: np.array, text: str, org: point(x , y), fontFace:int , fontScale:float , color: Scalar, thickness:int
txt = cv2.putText(img_get , 'I m king of saiyans' ,(32,32), 0  , 0.5 , (0,0,255) , 2)

cv2.imshow('text on image' , img_get)
cv2.waitKey(0)
# cv2.imwrite('king.jpg' , img_get)

a = cv2.IMREAD_COLOR # loads a color
b = cv2.IMREAD_GRAYSCALE # loads image in grayscale mode
c = cv2.IMREAD_UNCHANGED # loads images as such including alpha channel

# we above use this in cv2.imread(imag , 2nd argument) as cv2.imread(image , a/b/c)

img5 = cv2.imread('E://from phone//5.jpg')
img5 = cv2.resize(img5 , (500 , 500))

# for color list -->  https://realpython.com/python-opencv-color-spaces/
# for line type --> https://docs.opencv.org/4.x/d6/d6e/group__imgproc__draw.html#gaf076ef45de481ac96e0ab3dc2c29a777

'''This draws the line'''
new_img = cv2.line(img = img5 ,pt1=(200,200) , pt2= (500,500), color=[56,4,0], thickness=2, lineType= cv2.FILLED) # line cordinate as pt1(x,y) , pt2(x,y)

'''This draws the rectangle'''
new_img = cv2.rectangle(img5 , (100,360) , (420,460) , (0,255,0) , 2)

# for font face --> https://www.oreilly.com/library/view/mastering-opencv-4/9781789344912/16b55e96-1027-4765-85d8-ced8fa071473.xhtml
# for color --> https://www.rapidtables.com/web/color/RGB_Color.html

txt5 = cv2.putText(img = new_img , text = 'what the view sir jiiii' , org=(42,172) , fontFace=2 , fontScale=1 , color=(255,65,56), thickness=2)
cv2.imshow('text on image' , new_img)
cv2.waitKey(0)

"""# Draw circle and ellipse"""

old_img = cv2.imread('E://from phone//1.jpg')
old_img = cv2.resize(old_img , (500,500))

# img_circle = cv2.circle(img=old_img , center=(202,202) , radius= 45, color=[0,0,0] , thickness=2 , lineType= 1)


img_ellipse = cv2.ellipse(img= old_img , center= (202,202) #center of the ellipse
                          , axes=(45,34) # A tuple in (major axis length, minor axis length) format.
                          , angle= 30 # The rotation angle of an ellipse in degrees (cal from x axis)
                          , startAngle=10 #
                          , endAngle=300 #
                          , color= [ 0,0,0] , thickness=2 , lineType= 8 )


cv2.imshow('img ellipse' , img_ellipse)
cv2.waitKey(0)

"""#OCR Using easyocr module


"""

import cv2

img = cv2.imread('/content/5.jpg')

# cv2_imshow(img)

import easyocr

reader = easyocr.Reader(['en'])
result = reader.readtext('/content/5.jpg')

for detection in result:
  # print(detection[1])

  cv2.rectangle(img , detection[0][0] , detection[0][2] , [0,0,0], 2 , 2)
  cv2.putText(img , detection[1] ,detection[0][0] , 3 , 3 , [255,128,0] , 4)

cv2.imshow('ocr on image' , img)
cv2.waitKey(0)

"""#saving an image"""

cv2.imwrite('ocr image.jpg' , img)

"""#Changing the color space"""

# all color code --> https://docs.opencv.org/3.4/d8/d01/group__imgproc__color__conversions.html
import cv2

img = cv2.imread('/content/4.jpg')

# from rgb to gray scale
gray_img = cv2.cvtColor(img , cv2.COLOR_BGR2GRAY)
cv2.imshow('gray image',gray_img)
# from rgb to hsv
gray_2_bgr_img = cv2.cvtColor(img , cv2.COLOR_GRAY2BGR)
cv2.imshow('COLORED image',gray_2_bgr_img)
# from rgb to lab
lab_img = cv2.cvtColor(img , cv2.COLOR_BGR2LAB)
cv2.imshow('gray image',lab_img)

cv2.waitKey(0)
cv2.destroyAllWindows()
